@model Client_Home.Models.Invoice
@using PagedList.Core.Mvc
@using X.PagedList.Mvc.Core;


@{
    ViewData["Title"] = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    var product = ViewBag.product as List<Product>;
}
<style>
    canvas.drawing, canvas.drawingBuffer {
        position: absolute;
        left: 0;
        top: 0;
    }
    #pagination {
        margin-top: 20px;
    }

        #pagination button, #pagination span {
            margin-right: 5px;
            padding: 5px 10px;
            border: 1px solid #ccc;
            background-color: #f8f9fa;
            color: #495057;
            cursor: pointer;
        }

            #pagination button:hover {
                background-color: #00FFFF;
            }

        #pagination span {
            margin-right: 0;
            cursor: default;
        }

    /* Add this CSS to styles.css */

    .selected-products {
        border: 1px solid #ccc;
        padding: 20px;
        max-width: 300px;
        margin: 10px;
    }

        .selected-products h3 {
            font-size: 1.2em;
            margin-bottom: 10px;
        }

    #selectedProductsList {
        list-style-type: none;
        padding: 0;
    }

        #selectedProductsList li {
            margin-bottom: 5px;
            padding: 8px;
            border: 1px solid #ddd;
            background-color: #f9f9f9;
        }

    .totals {
        margin-top: 20px;
    }

    label {
        margin-right: 10px;
    }

</style>

<h1>Create</h1>

<h4>Invoice</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <h4> Invoice Information</h4>
                <hr />
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="CustomerId" class="control-label"></label>
                        <select asp-for="CustomerId" class="form-control" asp-items="ViewBag.CustomerId"></select>
                    </div>
                    <div class="form-group">
                        <label asp-for="EmployeeId" class="control-label"></label>
                        <select asp-for="EmployeeId" class="form-control" asp-items="ViewBag.EmployeeId"></select>
                    </div>
                    <div class="form-group">
                        <label asp-for="PaymentId" class="control-label"></label>
                        <select asp-for="PaymentId" class="form-control" asp-items="ViewBag.PaymentId"></select>
                    </div>
                    <div class="form-group">
                        <label asp-for="ShippingId" class="control-label"></label>
                        <select asp-for="ShippingId" class="form-control" asp-items="ViewBag.ShippingId"></select>
                    </div>
                    <div class="form-group">
                        <label asp-for="Status" class="control-label"></label>
                        <select asp-for="Status" class="custom-select">
                            <option value="Đã giao">Đã giao</option>
                            <option value="Chưa giao">Chưa giao</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="CreatedDate" class="control-label"></label>
                        <input asp-for="CreatedDate" class="form-control" />
                        <span asp-validation-for="CreatedDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="DeliveryCost" class="control-label"></label>
                        <input asp-for="DeliveryCost" class="form-control" />
                        <span asp-validation-for="DeliveryCost" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="TotalAmount" class="control-label"></label>
                        <input asp-for="TotalAmount" class="form-control" id="totalAmount" readonly />
                        <span asp-validation-for="TotalAmount" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <h4>Billing Information</h4>
                <hr />

                <!-- Selected Products -->
                <div id="selectedProducts">
                    <h5>Selected Products</h5>
                    <div id="scanner-container"></div>
                    <input type="button" id="btn" value="Start/Stop the scanner" />
                    <table class="table table-hover e-commerce-table">
                        <thead>
                        <tr>
                            <th>Tên SP</th>
                            <th>Giá</th>
                            <th>đ</th>
                        </tr>

                        </thead>
                        <tbody id="selectedProductsList">

                        </tbody>
                    </table>
                </div>

                <!-- Billing Information Fields -->
                <div class="form-group">
                    <label>Total Product Price</label>
                    <input id="totalProductPrice" type="text" class="form-control" readonly />
                </div>
                <div class="form-group">
                    <label>Discount</label>
                    <input id="discount" type="text" class="form-control" />
                </div>

            </div>
        </div>
    </div>


</div>

<div class="card" id="main-content-ProductsForInvoices">
    <div class="card-body">
        <div class="row m-b-30">
            <div class="col-lg-6">
                <div class="d-md-flex">
                    <div class="m-b-10">
                        <h3>Danh sách sản phẩm</h3>
                    </div>
                </div>
            </div>
            <div class="m-b-10 m-r-15">
            </div>
            <div class="m-b-10 m-r-15">
                <input id="keyword" type="text" name="keyword" class="form-control" placeholder="Tìm kiếm sản phẩm" />
            </div>
        </div>
        <div class="table-responsive" id="records_table">

        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/quagga/0.12.1/quagga.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/quagga/0.12.1/quagga.js"></script>

<script src="quagga.min.js"></script>

<script>
    var _scannerIsRunning = false;

    function startScanner() {
        Quagga.init({
            inputStream: {
                name: "Live",
                type: "LiveStream",
                target: document.querySelector('#scanner-container'),
                constraints: {
                    width: 480,
                    height: 320,
                    facingMode: "environment"
                },
            },
            decoder: {
                readers: [
                    "code_128_reader",
                    "ean_reader",
                    "ean_8_reader",
                    "code_39_reader",
                    "code_39_vin_reader",
                    "codabar_reader",
                    "upc_reader",
                    "upc_e_reader",
                    "i2of5_reader"
                ],
                debug: {
                    showCanvas: true,
                    showPatches: true,
                    showFoundPatches: true,
                    showSkeleton: true,
                    showLabels: true,
                    showPatchLabels: true,
                    showRemainingPatchLabels: true,
                    boxFromPatches: {
                        showTransformed: true,
                        showTransformedBox: true,
                        showBB: true
                    }
                }
            },

        }, function (err) {
            if (err) {
                console.log(err);
                return
            }

            console.log("Initialization finished. Ready to start");
            Quagga.start();

            // Set flag to is running
            _scannerIsRunning = true;
        });

        Quagga.onProcessed(function (result) {
            var drawingCtx = Quagga.canvas.ctx.overlay,
                drawingCanvas = Quagga.canvas.dom.overlay;

            if (result) {
                if (result.boxes) {
                    drawingCtx.clearRect(0, 0, parseInt(drawingCanvas.getAttribute("width")), parseInt(drawingCanvas.getAttribute("height")));
                    result.boxes.filter(function (box) {
                        return box !== result.box;
                    }).forEach(function (box) {
                        Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, { color: "green", lineWidth: 2 });
                    });
                }

                if (result.box) {
                    Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, { color: "#00F", lineWidth: 2 });
                }

                if (result.codeResult && result.codeResult.code) {
                    Quagga.ImageDebug.drawPath(result.line, { x: 'x', y: 'y' }, drawingCtx, { color: 'red', lineWidth: 3 });
                }
            }
        });

        Quagga.onDetected(function (result) {
            console.log("Barcode detected and processed : [" + result.codeResult.code + "]");

            // Gửi yêu cầu đến back end
            fetch('/Admin/Search/GetProductInfo', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    barcode: 414,
                }),
            })
                .then(response => response.json())
                .then(data => {
                    if (data) {
                        console.log('Product Name: ' + data.name);
                        console.log('Product Price: ' + data.discountPrice);
                        addProductToTable(data.name, data.discountPrice)
                    } else {
                        console.log('Product not found');
                    }
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
        });
    }


    // Start/stop scanner
    document.getElementById("btn").addEventListener("click", function () {
        if (_scannerIsRunning) {
            Quagga.stop();
        } else {
            startScanner();
        }
    }, false);
</script>