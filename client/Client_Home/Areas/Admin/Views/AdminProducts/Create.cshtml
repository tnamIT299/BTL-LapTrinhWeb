@model Client_Home.Models.Product

@{
    ViewData["Title"] = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<link href="assets/css/app.min.css" rel="stylesheet">
<style>
    .image-preview {
        position: relative;
        display: inline-block;
        margin: 10px;
        border: 1px solid #ccc;
        width: 150px; /* Set a fixed width for the image preview */
        height: 150px; /* Set a fixed height for the image preview */
        overflow: hidden; /* Ensure icons stay within bounds */
    }

    .delete-icon,
    .pin-icon {
        position: absolute;
        top: 5px;
        cursor: pointer;
        background: rgba(255, 255, 255, 0.7);
        padding: 5px;
    }

    .pin-icon {
        right: 5px; /* Position pin icon on the top right */
    }

    .delete-icon {
        left: 5px; /* Position delete icon on the top left */
    }

    .select-image {
        display: block;
        width: 20%;
        padding: 10px 0;
        border-radius: 15px;
        background: var(--blue);
        color: #fff;
        font-weight: 500;
        font-size: 16px;
        border: none;
        cursor: pointer;
        transition: all .3s ease;
    }

        .select-image:hover {
            background: var(--dark-blue);
        }

    .pinned {
        border: 5px solid #0071FF; /* Change this color to the highlight color you want */
        box-sizing: border-box;
    }
    .large-input{
        width: 650px;
    }
    .small-input{
        
        width: 300px;
    }
    .large-input,.small-input,.remove-button{
        margin-right: 20px;
        margin-bottom: 20px;

    }
</style>
<div class="main-content">
    <form asp-action="Create">
        <div class="page-header no-gutters has-tab">
            <div class="d-md-flex m-b-15 align-items-center justify-content-between">
         
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link active" data-toggle="tab" href="#product-edit-basic">Thông tin cơ bản</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-toggle="tab" href="#product-edit-description">Mô tả</a>
                </li>
            </ul>
            <div class="m-b-15">
                    <button type="submit" class="btn btn-primary">
                    <i class="anticon anticon-save"></i>
                    <span>Lưu</span>
                </button>
            </div>
            </div>
        </div>
        <div class="tab-content m-t-15">
            <div class="tab-pane fade show active" id="product-edit-basic">
                <div class="card">
                    <div class="card-body">

                        <div class="form-group">
                            <label asp-for="Name" class="control-label">Tên Sản Phẩm</label>
                            <input asp-for="Name" pattern="[a-zA-ZÀ-Ỹà-ỹ\s]+" required class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <div class="form-row">
                                <div class="col">
                                    <label asp-for="SellPrice" class="control-label">Giá Bán</label>
                                    <input asp-for="SellPrice" required pattern="[0-9]+" class="form-control" />
                                    <span asp-validation-for="SellPrice" class="text-danger"></span>
                                </div>
                                <div class="col">
                                    <label asp-for="Qrcode" class="control-label">Mã Code</label>
                                    <input asp-for="Qrcode" required pattern="[0-9]+" class="form-control" />
                                    <span asp-validation-for="Qrcode" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="form-row">
                                <div class="col">
                                    <label asp-for="TotalQuantity" class="control-label">Số Lượng</label>
                                    <input asp-for="TotalQuantity" required pattern="[0-9]+" class="form-control" />
                                    <span asp-validation-for="TotalQuantity" class="text-danger"></span>
                                </div>
                                <div class="col">
                                    <label asp-for="Unit" class="control-label">Đơn vị tính</label>
                                    <input asp-for="Unit" type="text" required pattern="[a-zA-ZÀ-Ỹà-ỹ\s]+" class="form-control" />
                                    <span asp-validation-for="Unit" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    

                    <div class="form-group">
                        <div class="form-row">
                            <div class="col">
                                <label class="font-weight-semibold" for="productCategory">Danh mục sản phẩm</label>
                                <select asp-for="CategoryId" class="custom-select" asp-items="ViewBag.CategoryId"></select>
                            </div>
                            <div class="col">
                                <label class="font-weight-semibold" for="productBrand">Nhà cung cấp</label>
                                <select asp-for="SupplierId" class="custom-select" asp-items="ViewBag.SupplierId"></select>
                            </div>
                        </div>
                    </div>


                        <div class="form-group">
                            <label asp-for="Active" class="control-label" for="productStatus">Trạng thái</label>
                            <select asp-for="Active" class="custom-select" id="productStatus">
                                <option value=1 selected>Đang bán</option>
                                <option value=0>Hết hàng</option>
                                <option value=-1>Ngừng kinh doanh</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label asp-for="Description" class="control-label">Mô tả sản phẩm</label>
                            <input asp-for="Description" class="form-control" />
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                    <label asp-for="ThumbnailUrl" class="font-weight-semibold" for="productThumbnail">Hình ảnh sản phẩm</label>
                     <input asp-for="ThumbnailUrl" type="file" id="fileInput" multiple accept="image/*" hidden>

                        <div id="imagePreviews"></div>
                        <button class=" btn btn-primary m-r-5" id="selectImageButton">Tải hình ảnh</button>
                    </div>
               </div>
            </div>
        </div>
        <div class="tab-pane fade" id="product-edit-description">
            <div class="card">
                <div class="card-body">
                    <div id="descriptions"></div>
                    <button type="button" class="btn btn-primary" id="add-button">Thêm thuộc tính</button>
                </div>
            </div>>
		</div>
    </form>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const selectImageButton = document.getElementById('selectImageButton');
        const fileInput = document.getElementById('fileInput');
        const imagePreviews = document.getElementById('imagePreviews');
        let pinnedImage = null; // Track the currently pinned image
        selectImageButton.addEventListener('click', function (event) {
            event.preventDefault(); // Prevent default form submission behavior
            fileInput.click(); // Trigger a click on the file input
        });

        fileInput.addEventListener('change', handleFileUpload);

        function handleFileUpload(event) {
            const files = event.target.files;

            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const reader = new FileReader();

                reader.onload = function () {
                    const preview = createImage_webpPreview(file, reader.result);
                    imagePreviews.appendChild(preview);
                    fileInput = preview.querySelector('fileInput').src;
                }

                reader.readAsDataURL(file);
            }
        }


        function createImagePreview(file, src) {
            const preview = document.createElement('div');
            preview.classList.add('image-preview');

            const image = document.createElement('img');
            image.src = src;
            image.style.width = '100%';
            image.style.height = '100%';
            preview.appendChild(image);

            const deleteIcon = document.createElement('span');
            deleteIcon.classList.add('delete-icon');
            deleteIcon.innerHTML = 'X';
            deleteIcon.addEventListener('click', function () {
                preview.remove();
            });
            preview.appendChild(deleteIcon);

            const pinIcon = document.createElement('span');
            pinIcon.classList.add('pin-icon');
            pinIcon.innerHTML = '📌';
            pinIcon.addEventListener('click', function () {
                if (pinnedImage) {
                    pinnedImage.classList.remove('pinned');
                }
                pinnedImage = preview;
                pinnedImage.classList.add('pinned');
                imagePreviews.prepend(preview);
            });
            preview.appendChild(pinIcon);

            return preview;
        }

        function createImage_webpPreview(file, src) {
            const preview = document.createElement('div');
            preview.classList.add('image-preview');

            const image = document.createElement('img');

            if (file.type === 'image/png') {
                // Convert PNG to WebP
                convertImageToWebP(file, function (webpImage) {
                    image.src = webpImage;
                });
            } else {
                // For other image types, use the original source
                image.src = src;
            }

            image.style.width = '100%';
            image.style.height = '100%';
            preview.appendChild(image);

            const deleteIcon = document.createElement('span');
            deleteIcon.classList.add('delete-icon');
            deleteIcon.innerHTML = 'X';
            deleteIcon.addEventListener('click', function () {
                preview.remove();
            });
            preview.appendChild(deleteIcon);

            const pinIcon = document.createElement('span');
            pinIcon.classList.add('pin-icon');
            pinIcon.innerHTML = '📌';
            pinIcon.addEventListener('click', function () {
                if (pinnedImage) {
                    pinnedImage.classList.remove('pinned');
                }
                pinnedImage = preview;
                pinnedImage.classList.add('pinned');
                imagePreviews.prepend(preview);
            });
            preview.appendChild(pinIcon);

            return preview;
        }

        function convertImageToWebP(file, callback) {
            const reader = new FileReader();

            reader.onload = function () {
                const img = new Image();
                img.src = reader.result;

                img.onload = function () {
                    const canvas = document.createElement('canvas');
                    canvas.width = img.width;
                    canvas.height = img.height;
                    const ctx = canvas.getContext('2d');
                    ctx.drawImage(img, 0, 0);

                    const webpImage = canvas.toDataURL('image/webp');
                    callback(webpImage);
                };
            };

            reader.readAsDataURL(file);
        }

    });

    document.getElementById('add-button').addEventListener('click', function () {
        var descriptions = document.getElementById('descriptions');
        var newDescription = document.createElement('div');
        newDescription.innerHTML = `
                    <div class="form-row">
                        <input type="text" class="form-control small-input" name="Name" />
                        <input type="text" class=" form-control large-input" name="Value" />
                            <button class="btn btn-primary remove-button">X</button>
                    </div>
                `;
        descriptions.appendChild(newDescription);

        // Add event listener for remove button
        var removeButton = newDescription.querySelector('.remove-button');
        removeButton.addEventListener('click', function () {
            this.parentNode.remove();
        });
    });

</script>