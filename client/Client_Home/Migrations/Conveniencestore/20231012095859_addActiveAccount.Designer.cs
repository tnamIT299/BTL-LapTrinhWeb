// <auto-generated />
using System;
using Client_Home.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Client_Home.Migrations.Conveniencestore
{
    [DbContext(typeof(ConveniencestoreContext))]
    [Migration("20231012095859_addActiveAccount")]
    partial class addActiveAccount
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Client_Home.Models.Account", b =>
                {
                    b.Property<int>("Accountid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ACCOUNTID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Accountid"));

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDATE");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Fullname")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("FULLNAME");

                    b.Property<DateTime?>("Lastlogin")
                        .HasColumnType("datetime")
                        .HasColumnName("LASTLOGIN");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("PHONE");

                    b.Property<int?>("Roleid")
                        .HasColumnType("int")
                        .HasColumnName("ROLEID");

                    b.Property<string>("Salt")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("SALT")
                        .IsFixedLength();

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.HasKey("Accountid")
                        .HasName("PK__ACCOUNTS__1F64FDFCD3B51490");

                    b.HasIndex("Roleid");

                    b.ToTable("ACCOUNTS", (string)null);
                });

            modelBuilder.Entity("Client_Home.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("ParentCategoryID");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A2B10713FBC");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Client_Home.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Birthday")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("birthday");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Rank")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("RewardPoints")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__B611CB9D98268D25");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Client_Home.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("employeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("CitizenId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CitizenID");

                    b.Property<DateTime?>("DateHired")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__C134C9A11A764CDB");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Client_Home.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InvoiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<byte[]>("CreatedDate")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("createdDate");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    b.Property<int?>("ShippingId")
                        .HasColumnType("int")
                        .HasColumnName("ShippingID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("InvoiceId")
                        .HasName("PK__Invoices__D796AAD58A15F0AA");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ShippingId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Client_Home.Models.InvoiceDetail", b =>
                {
                    b.Property<int>("InvoiceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InvoiceDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceDetailId"));

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("InvoiceID");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InvoiceDetailId")
                        .HasName("PK__InvoiceD__1F1578F1BB5D5EF5");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("Client_Home.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money")
                        .HasColumnName("totalAmount");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BAFD0BC4AE7");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Client_Home.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int")
                        .HasColumnName("OrderDetailID");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("money");

                    b.HasKey("OrderDetailId")
                        .HasName("PK__OrderDet__D3B9D30C1E2B64A9");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Client_Home.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("Details")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MethodName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A589797EF5E");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Client_Home.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("active")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("BestsellerFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bestsellerFlag")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryID");

                    b.Property<byte[]>("DateAdded")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("dateAdded");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("discount");

                    b.Property<decimal?>("DiscountPrice")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(26, 8)")
                        .HasColumnName("discountPrice")
                        .HasComputedColumnSql("([sellPrice]-([sellPrice]*[discount])/(100))", false);

                    b.Property<bool?>("HomeFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("homeFlag")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imageUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal?>("SellPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("sellPrice");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int")
                        .HasColumnName("totalQuantity");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("videoUrl");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__B40CC6ED2EBDBC5C");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Client_Home.Models.ProductBatch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BatchID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchId"));

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("barcode");

                    b.Property<string>("BatchNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ImportPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("importPrice");

                    b.Property<DateTime?>("ManufactureDate")
                        .HasColumnType("date");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BatchId")
                        .HasName("PK__ProductB__5D55CE38B0793EA1");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductBatches");
                });

            modelBuilder.Entity("Client_Home.Models.Role", b =>
                {
                    b.Property<int>("Roleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ROLEID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Roleid"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Rolename")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ROLENAME");

                    b.HasKey("Roleid")
                        .HasName("PK__ROLES__006568E9599A1705");

                    b.ToTable("ROLES", (string)null);
                });

            modelBuilder.Entity("Client_Home.Models.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Bonus")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Deductions")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<decimal?>("HourlyRate")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("HoursWorked")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MonthYear")
                        .HasColumnType("date");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Salaries__3214EC27DC986AA3");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("Client_Home.Models.Shipping", b =>
                {
                    b.Property<int>("ShippingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShippingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShippingId"));

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("EstimatedDeliveryTime")
                        .HasColumnType("int");

                    b.Property<string>("MethodName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Provider")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ShippingId")
                        .HasName("PK__Shipping__5FACD460BC0762F5");

                    b.ToTable("Shipping", (string)null);
                });

            modelBuilder.Entity("Client_Home.Models.ShippingLocation", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("city");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<string>("District")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("district");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("isDefault");

                    b.Property<string>("Street")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ward")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ward");

                    b.HasKey("LocationId")
                        .HasName("PK__Shipping__E7FEA4771FD4FB63");

                    b.HasIndex("CustomerId");

                    b.ToTable("ShippingLocations");
                });

            modelBuilder.Entity("Client_Home.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SupplierId")
                        .HasName("PK__Supplier__4BE66694069AD674");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Client_Home.Models.Account", b =>
                {
                    b.HasOne("Client_Home.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("Roleid")
                        .HasConstraintName("FK__ACCOUNTS__ROLEID__74AE54BC");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Client_Home.Models.Category", b =>
                {
                    b.HasOne("Client_Home.Models.Category", "ParentCategory")
                        .WithMany("InverseParentCategory")
                        .HasForeignKey("ParentCategoryId")
                        .HasConstraintName("FK__Categorie__Paren__412EB0B6");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Client_Home.Models.Invoice", b =>
                {
                    b.HasOne("Client_Home.Models.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Invoices__Custom__5070F446");

                    b.HasOne("Client_Home.Models.Employee", "Employee")
                        .WithMany("Invoices")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__Invoices__Employ__5165187F");

                    b.HasOne("Client_Home.Models.Payment", "Payment")
                        .WithMany("Invoices")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK__Invoices__Paymen__52593CB8");

                    b.HasOne("Client_Home.Models.Shipping", "Shipping")
                        .WithMany("Invoices")
                        .HasForeignKey("ShippingId")
                        .HasConstraintName("FK__Invoices__Shippi__534D60F1");

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("Payment");

                    b.Navigation("Shipping");
                });

            modelBuilder.Entity("Client_Home.Models.InvoiceDetail", b =>
                {
                    b.HasOne("Client_Home.Models.Invoice", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK__InvoiceDe__Invoi__5629CD9C");

                    b.HasOne("Client_Home.Models.Product", "Product")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__InvoiceDe__Produ__571DF1D5");

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Client_Home.Models.Product", b =>
                {
                    b.HasOne("Client_Home.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Products__catego__48CFD27E");

                    b.HasOne("Client_Home.Models.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK__Products__Suppli__49C3F6B7");

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Client_Home.Models.ProductBatch", b =>
                {
                    b.HasOne("Client_Home.Models.Product", "Product")
                        .WithMany("ProductBatches")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductBa__Produ__59FA5E80");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Client_Home.Models.Salary", b =>
                {
                    b.HasOne("Client_Home.Models.Employee", "Employee")
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__Salaries__Employ__3B75D760");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Client_Home.Models.ShippingLocation", b =>
                {
                    b.HasOne("Client_Home.Models.Customer", "Customer")
                        .WithMany("ShippingLocations")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__ShippingL__Custo__3E52440B");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Client_Home.Models.Category", b =>
                {
                    b.Navigation("InverseParentCategory");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Client_Home.Models.Customer", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("ShippingLocations");
                });

            modelBuilder.Entity("Client_Home.Models.Employee", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("Client_Home.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("Client_Home.Models.Payment", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Client_Home.Models.Product", b =>
                {
                    b.Navigation("InvoiceDetails");

                    b.Navigation("ProductBatches");
                });

            modelBuilder.Entity("Client_Home.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Client_Home.Models.Shipping", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Client_Home.Models.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
